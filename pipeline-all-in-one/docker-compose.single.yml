version: "3.8"

services:
  kafka1:
    image: apache/kafka:3.7.0
    hostname: kafka1
    volumes:
      - kafka1-single-log:/var/lib/kafka/data
    secrets:
      - kafka-truststore
      - kafka1-keystore
    networks:
      kafka-client-network:
        ipv4_address: 192.168.45.10
        aliases: [ "kafka1" ]
    ports:
      - "9093:9093"
    env_file:
      - ./kafka1_single.env

  initializer:
    build:
      context: ..  # The root of the domainradar repo
      dockerfile: ./pipeline-all-in-one/initializer.Dockerfile
    depends_on:
      - kafka1
    secrets:
      - kafka-truststore
      - client1-keystore
    networks:
      - kafka-client-network
    volumes:
      - ./client_properties/initializer.properties:/scripts/client.properties
    environment:
      - BOOTSTRAP=kafka1:9093
      - COMMAND_CONFIG_FILE=/scripts/client.properties

  collector-zone:
    image: domrad-java-standalone:latest
    command: [ "--col-zone", "-id", "${ID_PREFIX-domrad}", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/zone.properties:/app/client.properties
    
  collector-dns:
    image: domrad-java-standalone:latest
    command: [ "--col-dns", "-id", "${ID_PREFIX-domrad}", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/dns.properties:/app/client.properties
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8111,server=y,suspend=n
    ports:
      - "8111:8111"

  collector-nerd:
    image: domrad-java-standalone:latest
    command: [ "--col-nerd", "-id", "${ID_PREFIX-domrad}", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/nerd.properties:/app/client.properties

  collector-geoip:
    image: domrad-java-streams:latest
    command: [ "--col-geoip", "-t", "${THREADS:-4}", "-id", "${ID_PREFIX-domrad}-geoip", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/geoip.properties:/app/client.properties
      - ./geoip_data/:/app/geoip/

  merger-ip:
    image: domrad-java-streams:latest
    command: [ "--ip-merger", "-t", "${THREADS:-4}", "-id", "${ID_PREFIX-domrad}-merger-ip", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/mergers.properties:/app/client.properties

  merger-all:
    image: domrad-java-streams:latest
    command: [ "--domain-merger", "-t", "${THREADS:-4}", "-id", "${ID_PREFIX-domrad}-merger-all", "-p", "/app/client.properties", "-s", "kafka1:9093" ]
    depends_on:
      initializer:
        condition: service_completed_successfully
    secrets:
      - kafka-truststore
      - client2-keystore
    networks:
      - kafka-client-network
      - collector-network
    volumes:
      - ./client_properties/mergers.properties:/app/client.properties

volumes:
  kafka1-single-log:

networks:
  kafka-client-network:
    driver: bridge
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 192.168.45.0/24
          ip_range: 192.168.45.0/24
  collector-network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.0.45.0/24
        - subnet: fd10:3456:789a:1::/64

secrets:
  kafka-truststore:
    file: ./secrets/kafka.truststore.jks
  kafka1-keystore:
    file: ./secrets/secrets_kafka1/kafka1.keystore.jks
  client1-keystore:
    file: ./secrets/secrets_client1/client1.keystore.jks
  client2-keystore:
    file: ./secrets/secrets_client2/client2.keystore.jks
    