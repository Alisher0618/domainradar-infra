name=mongo-sink-dn-collectors
connector.class=com.mongodb.kafka.connect.MongoSinkConnector
topics.regex=processed_.*

connection.uri=mongodb://connect:XudtfxKsnpDHvk3LXW6eiuJfLSAZTz6t@mongo:27017/admin
server.api.version=1
database=domainradar
collection=dn_data

key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false

transforms=MongoKey,InsertOffset
transforms.MongoKey.type=cz.vut.fit.domainradar.connect.MongoKeyTransformation
transforms.InsertOffset.type=org.apache.kafka.connect.transforms.InsertField$Value
transforms.InsertOffset.offset.field=offset!

max.batch.size=5
bulk.write.ordered=false
tasks.max=1

# Add the _id field using the FullKey strategy (the whole key, previously transformed by our custom
# transformation, will be used as _id); then remove the "key" fields from the value
post.processor.chain=com.mongodb.kafka.connect.sink.processor.DocumentIdAdder,com.mongodb.kafka.connect.sink.processor.BlockListValueProjector
document.id.strategy=com.mongodb.kafka.connect.sink.processor.id.strategy.FullKeyStrategy
value.projection.type=BlockList
value.projection.list=lastAttempt

# Although the IDs should be unique, this supports at-least-once delivery
writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneDefaultStrategy
